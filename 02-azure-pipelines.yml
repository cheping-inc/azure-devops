# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Job_Version
    steps: 
    - bash: echo Versions of tools
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - script: echo "pipeline variable = $(pipelineLevelVariable)"
      displayName: 'Run a line script'
  - job: Job_WorkingDirectory
    steps: 
    - bash: echo deploy dev
    - bash: echo env=$(var1)
    - bash: echo default working directory = $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)  
    - bash: echo artifact staging directory = $(Build.ArtifactStagingDirectory)
    - bash: ls -R $(Build.ArtifactStagingDirectory)  
  - job: Job_Copy_Files
    steps: 
    - bash: echo copy data to artifact
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.tf
          **/*.yaml
          **
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: echo artifact staging directory = $(Build.ArtifactStagingDirectory)
    - bash: ls -R $(Build.ArtifactStagingDirectory)  

- stage: DevDeploy
  variables:
    var1: envDev
  dependsOn: Build
  jobs:  
  - job: SecondJob
    steps: 
    - bash: echo Build second Job bash only
  
- stage: QADeploy
  dependsOn: Build
  jobs:
  - job: QADeployJob
    steps: 
    - bash: echo deploy QA

- stage: PRDDeploy
  dependsOn: [DevDeploy,QADeploy]
  jobs:
  - job: PRDDeployJob
    steps: 
    - bash: echo deploy PROD
    